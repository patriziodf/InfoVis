/*
=======================================================
Disegna 30 emoj (faccine sorridenti) in posizione casuale nell'area di disegno (le sovrapposizioni sono permesse).
Quando si fa click con il mouse su una faccina questa diventa da sorridente a triste e poi esce dall'area di
disegno traslando verso una direzione casuale.
Dopo qualche secondo riappare in una posizione causale dell'area di disegno.
=======================================================
*/

var margin = {
        top: 0,
        right: 0,
        bottom: 0,
        left: 0
    },
    width = 1400 - margin.left - margin.right,
    height = 600 - margin.top - margin.bottom;

// number of data elements
var n = 30
var emoj = [];

const root = d3.select('#root');


// Returns a random integer between min (inclusive) and max (inclusive)

function Random2(min, max) {
    return Math.floor(Math.random() * (max - min)) ;
}

for (i in d3.range(n)) {
    var emoj_loc = Random2(0, width*0.4);
    emoj.push(emoj_loc);
}

// Draw the initial SVG
var svg = root.append("svg")
    .attr("width", width/0.7)
    .attr("height", height/0.7)

// Smile svg path
var emoj_path = {
    fill: "#ffef64",
    stroke: "#000000",

sad:    "M 239.612 427.468 C 239.612 314.325 340.431 222.468 464.612 222.468 C 588.792 222.468 689.612 314.325 689.612 427.468 C 689.612 540.61 588.792 632.468 464.612 632.468 C 340.431 632.468 239.612 540.61 239.612 427.468 Z" +
    "M 315.833 417.03 C 315.833 401.148 328.394 388.255 343.866 388.255 C 359.338 388.255 371.9 401.148 371.9 417.03 C 371.9 432.911 359.338 445.805 343.866 445.805 C 328.394 445.805 315.833 432.911 315.833 417.03 Z"+
    " M 335.713 412.046 C 335.713 408.569 338.463 405.745 341.851 405.745 C 345.239 405.745 347.989 408.569 347.989 412.046 C 347.989 415.523 345.239 418.346 341.851 418.346 C 338.463 418.346 335.713 415.523 335.713 412.046 Z"+
    " M 539.184 417.03 C 539.184 401.148 551.745 388.255 567.217 388.255 C 582.689 388.255 595.251 401.148 595.251 417.03 C 595.251 432.911 582.689 445.805 567.217 445.805 C 551.745 445.805 539.184 432.911 539.184 417.03 Z "+
    " M 558.972 412.046 C 558.972 408.569 561.723 405.745 565.11 405.745 C 568.498 405.745 571.248 408.569 571.248 412.046 C 571.248 415.523 568.498 418.346 565.11 418.346 C 561.723 418.346 558.972 415.523 558.972 412.046 Z "+
    " M 455.542 457.56 L 458.474 457.654 C 463.322 457.983 468.134 458.738 472.857 459.911 C 478.771 461.487 484.489 463.759 489.897 466.681 C 495.329 469.697 500.375 473.392 504.921 477.683 C 511.124 483.707 516.105 490.929 519.579 498.936 C 523.083 507.326 524.651 516.434 524.16 525.548 L 522.327 527.523 L 520.495 525.642 L 520.22 523.761 C 518.7 509.402 511.598 496.28 500.524 487.369 C 494.181 482.019 486.862 478.023 478.995 475.615 C 475.111 474.327 471.126 473.383 467.085 472.794 L 464.703 472.606 L 461.863 472.323 C 454.779 471.884 447.67 472.358 440.701 473.734 L 439.052 474.016 C 436.193 474.678 433.378 475.527 430.623 476.555 L 429.158 477.119 C 425.352 478.62 421.674 480.445 418.164 482.573 C 411.347 486.838 405.378 492.39 400.575 498.936 C 396.072 505.172 393.002 512.373 391.596 520 L 390.864 525.172 L 390.864 525.548 L 389.031 527.429 L 387.107 525.548 C 386.041 512.212 389.611 498.919 397.185 488.028 C 397.826 486.899 398.651 485.865 399.475 484.736 L 401.124 482.667 C 412.804 468.598 429.368 459.76 447.297 458.03 L 451.419 457.654 L 455.45 457.654 L 455.542 457.56 Z  M 367.594 340.954 L 367.777 346.596 L 364.113 350.64 L 329.575 366.438 L 324.078 366.626 L 320.139 362.771 L 320.047 357.128 L 323.712 353.085 L 358.25 337.287 L 363.746 337.193 L 367.594 340.954 Z  M 551.185 337.287 L 585.723 353.085 L 589.388 357.128 L 589.388 362.677 L 589.296 362.677 L 585.357 366.532 L 579.86 366.438 L 545.414 350.64 L 541.658 346.596 L 541.749 340.954 L 545.78 337.193 L 551.185 337.193 L 551.185 337.287 Z",

    smile:    "M 239.612 427.562 C 239.612 314.419 340.431 222.562 464.612 222.562 C 588.792 222.562 689.612 314.419 689.612 427.562 C 689.612 540.705 588.792 632.562 464.612 632.562 C 340.431 632.562 239.612 540.705 239.612 427.562 Z"
    +" M 315.833 416.748 C 315.833 400.866 328.394 387.972 343.866 387.972 C 359.338 387.972 371.9 400.866 371.9 416.748 C 371.9 432.629 359.338 445.523 343.866 445.523 C 328.394 445.523 315.833 432.629 315.833 416.748 Z "
    +" M 335.713 411.858 C 335.713 408.38 338.463 405.557 341.851 405.557 C 345.239 405.557 347.989 408.38 347.989 411.858 C 347.989 415.335 345.239 418.158 341.851 418.158 C 338.463 418.158 335.713 415.335 335.713 411.858 Z "
    +" M 539.184 416.748 C 539.184 400.866 551.745 387.972 567.217 387.972 C 582.689 387.972 595.251 400.866 595.251 416.748 C 595.251 432.629 582.689 445.523 567.217 445.523 C 551.745 445.523 539.184 432.629 539.184 416.748 Z "
    +" M 558.972 411.858 C 558.972 408.38 561.723 405.557 565.11 405.557 C 568.498 405.557 571.248 408.38 571.248 411.858 C 571.248 415.335 568.498 418.158 565.11 418.158 C 561.723 418.158 558.972 415.335 558.972 411.858 Z "
    +" M 524.16 464.706 C 524.808 473.83 523.234 482.976 519.579 491.319 C 515.143 501.735 508.093 510.756 499.149 517.461 C 484.226 528.841 465.706 534.105 447.205 532.225 L 444.457 531.849 C 439.729 531.045 435.072 529.85 430.532 528.275 C 429.158 527.711 427.783 527.241 426.501 526.583 L 423.844 525.454 C 419.46 523.262 415.288 520.649 411.385 517.649 C 405.016 512.579 399.559 506.405 395.261 499.406 C 392.487 494.702 390.331 489.643 388.848 484.36 C 387.179 478.087 386.559 471.569 387.016 465.083 L 387.016 464.706 L 388.848 462.732 L 390.68 464.612 C 391.106 468.538 391.903 472.412 393.062 476.179 C 396.495 487.058 403.118 496.583 412.026 503.45 C 420.398 510.09 430.2 514.573 440.609 516.521 C 447.537 517.979 454.627 518.453 461.68 517.931 L 464.612 517.649 C 465.436 517.649 466.261 517.461 466.993 517.367 C 483.652 515.107 498.866 506.476 509.593 493.2 C 515.717 485.075 519.438 475.316 520.312 465.083 L 520.312 464.612 L 522.144 462.732 L 524.068 464.612 L 524.16 464.706 Z "
    +" M 367.777 346.502 L 369.884 351.58 L 369.884 351.674 L 367.777 356.846 L 362.83 359.009 L 324.994 359.009 L 319.956 356.846 L 317.849 351.674 L 319.956 346.502 L 324.994 344.339 L 362.83 344.339 L 367.777 346.502 Z  M 591.037 346.502 L 593.144 351.58 L 593.144 351.674 L 591.128 356.846 L 586.09 359.009 L 548.254 359.009 L 543.215 356.846 L 541.2 351.674 L 543.215 346.502 L 548.254 344.339 L 586.09 344.339 L 591.128 346.502 L 591.037 346.502 Z "
};



var svgPaths = svg.selectAll(".emoj_path")
    .data(emoj)
    .enter()
    .append('path')
    .attr("class", ".emoj_path")
    .attr("id", "emoj_path")
    .attr("d", emoj_path.smile)
    .style("stroke", emoj_path.stroke)
    .style("fill", emoj_path.fill)
    .style('stroke-width', '10')
    .style("transform", function(d) {
        return '' + "scale(.18) rotate(" + Random2(0, 180) + "deg)" + ''
    })
    //moving the svgs
    .style("transform-origin", function(d) {
        return '' + (d + Random2(0, width*0.7)+150) + 'px' + ' ' + (Random2(0, height*0.8)+200) + 'px' + ''
    })

/*

parte del colore
                            .on('mouseover', function(smile) {
                               // if(d3.select(this).getAttribute("smile") === emoj_path.smile)
                                d3.select(this)
                                    .transition().duration(2) //Set transition
                                    .style('stroke', 'rgb(222, 255, 0)')
                                    .style('fill', 'rgb(0, 255, 0)')
                                    .style('stroke-width', '10')
                            })
                            .on('mouseout', function(smile) {
                                d3.select(this)
                                    .transition().duration(2)
                                    .style('stroke', emoj_path.stroke)
                                    .style("fill", emoj_path.fill)
                                    .style('stroke-width', '10')
                            })

                            */


    .on('click', function() {
        d3.select(this).attr("d", emoj_path.sad)
        d3.select(this).transition().duration(5000).style("transform-origin", function (d) {
            return '' + (3000) + 'px' + ' ' + (Random2(0, height * 0.8) + 200) + 'px' + ''
        }).each("end",function(){
            d3.select(this).style("transform", function() {
                return '' + (Random2(0, width*0.7)+150) + 'px' + ' ' + (Random2(0, height*0.8)+200) + 'px' + ''
            })

        })



    })



